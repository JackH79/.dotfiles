servers = (
  {
    address = "irc.freenode.net";
    chatnet = "Freenode";
    port = "6667";
    use_ssl = "no";
    ssl_verify = "no";
    autoconnect = "yes";
  }
);

chatnets = {
  Freenode = {
    type = "IRC";
    nick = "jackh79";
    autosendcmd = "/msg nickserv identify ;wait 2000";
  };
};

channels = (
  { name = "#archlinux"; chatnet = "Freenode"; autojoin = "Yes"; },
  {
    name = "#archlinux-offtopic";
    chatnet = "Freenode";
    autojoin = "Yes";
  }
);

aliases = {
  J = "join";
  LEAVE = "part";
  E = "exec";
  EO = "exec -o";
  EXIT = "quit";
  LL = "lastlog";
  W = "window";
  M = "mark";
  WC = "window close";
  WK = "window kill";
  WN = "window new hide";
  RUN = "SCRIPT LOAD";
  Q = "QUERY";
};

statusbar = {
  # formats:
  # when using {templates}, the template is shown only if it's argument isn't
  # empty unless no argument is given. for example {sb} is printed always,
  # but {sb $T} is printed only if $T isn't empty.

  items = {
    # start/end text in statusbars
    barstart = "{sbstart}";
    barend = "{sbend}";

    topicbarstart = "{topicsbstart}";
    topicbarend = "{topicsbend}";

    # treated "normally", you could change the time/user name to whatever
    time = "{sb $Z}";
    user = "{sb $N}";

    # treated specially .. window is printed with non-empty windows,
    # window_empty is printed with empty windows
    window = "{sb $winref:$tag/$itemname{sbmode $M}}";
    window_empty = "{sb $winref{sbservertag $tag}}";
    prompt = "{prompt $[.15]itemname}";
    prompt_empty = "{prompt $winname}";
    topic = " $topic";
    topic_empty = " Irssi v$J - http://irssi.org/help/";

    # all of these treated specially, they're only displayed when needed
    lag = "{sb Lag: $0-}";
    act = "{sb Act: $0-}";
    more = "-- more --";
  };

  # there's two type of statusbars. root statusbars are either at the top
  # of the screen or at the bottom of the screen. window statusbars are at
  # the top/bottom of each split window in screen.
  default = {
    # the "default statusbar" to be displayed at the bottom of the window.
    # contains all the normal items.
    window = {
      disabled = "yes";

      # window, root
      type = "window";
      # top, bottom
      placement = "bottom";
      # number
      position = "0";
      # active, inactive, always
      visible = "active";

      # list of items in statusbar in the display order
      items = {
        barstart = { priority = "100"; };
        time = { };
        user = { };
        window = { };
        window_empty = { };
        lag = { priority = "-1"; };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
        active = { };
        act = { };
      };
    };

    # statusbar to use in inactive split windows
    window_inact = {
      type = "window";
      placement = "bottom";
      position = "1";
      visible = "inactive";
      items = {
        barstart = { priority = "100"; };
        window = { };
        window_empty = { };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
      };
    };

    # we treat input line as yet another statusbar :) It's possible to
    # add other items before or after the input line item.
    prompt = {
      type = "root";
      placement = "bottom";
      # we want to be at the bottom always
      position = "100";
      visible = "always";
      items = {
        barstart = { priority = "100"; };
        time = { };
        user = { };
        prompt = { priority = "-1"; };
        prompt_empty = { priority = "-1"; };
        # treated specially, this is the real input line.
        input = { priority = "10"; };
      };
    };

    # topicbar
    topic = {
      type = "root";
      placement = "bottom";
      position = "1";
      visible = "always";
      items = {
        topicbarstart = { priority = "100"; };
        topic = { };
        topic_empty = { };
        topicbarend = { priority = "100"; alignment = "right"; };
      };
    };

    awl_0 = {
      items = {
        barstart = { priority = "100"; };
        awl_0 = { };
        barend = { priority = "100"; alignment = "right"; };
      };
    };
  };
};

settings = {
  core = {
    real_name = "Jack Holborn";
    user_name = "jackh79";
    nick = "jackh79";
  };

  "fe-text" = { actlist_sort = "refnum"; };

  "fe-common/core" = {
    emphasis = "OFF";
    theme = "brisbin.theme";
    beep_msg_level = "NOTICE MSGS HILIGHT";
    bell_beeps = "no";
    hilight_nick_matches = "no";
    autolog_path = "~/.logs/irclogs/$tag/$0.log";
    autolog = "yes";
  };

  "perl/core/scripts" = {
    neat_maxlength = "13";
    awl_display_key = "%w$N.$H$C$S";
    awl_position = "0";
    awl_sbar_maxlength = "no";
    awl_maxlines = "1";
    screen_away_message = "= screen detached, be back later.";
  };
};

ignores = ( { level = "JOINS PARTS QUITS NICKS"; } );

hilights = (
  { text = "jack"; nick = "no"; word = "no"; fullword = "yes"; },
  { text = ""; nick = "no"; word = "no"; fullword = "yes"; },
  { text = "jackh"; nick = "no"; word = "no"; fullword = "yes"; },
  { text = "jackh79"; nick = "no"; word = "no"; fullword = "yes"; },
  { text = "jackh78"; nick = "no"; word = "no"; fullword = "yes"; }
);

logs = { };

default_color = "-1";
info_eol = "false";
replaces = { "[]=" = "%K$*%n"; };
abstracts = {

  ##
  ## generic
  ##

  # text to insert at the beginning of each non-message line
  line_start = "%c��%n ";

  # timestamp styling, nothing by default
  timestamp = "%K$0-%n";

  # any kind of text that needs hilighting, default is to bold
  hilight = "%_$*%_";

  # any kind of error message, default is bright red
  error = "%R$*%n";

  # channel name is printed
  channel = "%_$*%_";

  # nick is printed
  nick = "%_$*%_";

  # nick host is printed
  nickhost = "[$*]";

  # server name is printed
  server = "%_$*%_";

  # some kind of comment is printed
  comment = "[$*]";

  # reason for something is printed (part, quit, kick, ..)
  reason = "{comment $*}";

  # mode change is printed ([+o nick])
  mode = "{comment $*}";

  ##
  ## channel specific messages
  ##

  # highlighted nick/host is printed (joins)
  channick_hilight = "%C$*%n";
  chanhost_hilight = "{nickhost %c$*%n}";

  # nick/host is printed (parts, quits, etc.)
  channick = "%c$*%n";
  chanhost = "{nickhost $*}";

  # highlighted channel name is printed
  channelhilight = "%c$*%n";

  # ban/ban exception/invite list mask is printed
  ban = "%c$*%n";

  ##
  ## messages
  ##

  # the basic styling of how to print message, $0 = nick mode, $1 = nick
  msgnick = "%K%n$0$1-%K%n: %|";

  # message from you is printed. "msgownnick" specifies the styling of the
  # nick ($0 part in msgnick) and "ownmsgnick" specifies the styling of the
  # whole line.

  # Example1: You want the message text to be green:
  #  ownmsgnick = "{msgnick $0 $1-}%g";
  # Example2.1: You want < and > chars to be yellow:
  #  ownmsgnick = "%Y{msgnick $0 $1-%Y}%n";
  #  (you'll also have to remove <> from replaces list above)
  # Example2.2: But you still want to keep <> grey for other messages:
  #  pubmsgnick = "%K{msgnick $0 $1-%K}%n";
  #  pubmsgmenick = "%K{msgnick $0 $1-%K}%n";
  #  pubmsghinick = "%K{msgnick $1 $0$2-%n%K}%n";
  #  ownprivmsgnick = "%K{msgnick  $*%K}%n";
  #  privmsgnick = "%K{msgnick  %R$*%K}%n";

  # $0 = nick mode, $1 = nick
  ownmsgnick = "{msgnick $0 $1-}%w";
  ownnick = "%w$*%n";

  # public message in channel, $0 = nick mode, $1 = nick
  pubmsgnick = "{msgnick $0 $1-}";
  pubnick = "%N$*%n";

  # public message in channel meant for me, $0 = nick mode, $1 = nick
  pubmsgmenick = "{msgnick $0 $1-}";
  menick = "%N$*%n";

  # public highlighted message in channel
  # $0 = highlight color, $1 = nick mode, $2 = nick
  pubmsghinick = "{msgnick $1 $0$2-%n}";

  # channel name is printed with message
  msgchannel = "%K:%c$*%n";

  # private message, $0 = nick, $1 = host
  privmsg = "[%R$0%K(%r$1-%K)%n] ";

  # private message from you, $0 = "msg", $1 = target nick
  ownprivmsg = "[%r$0%K(%R$1-%K)%n] ";

  # own private message in query
  ownprivmsgnick = "{msgnick $*}";
  ownprivnick = "%W$*%n";

  # private message in query
  privmsgnick = "{msgnick %R$*%n}";

  ##
  ## Actions (/ME stuff)
  ##

  # used internally by this theme
  action_core = "%M$*";

  # generic one that's used by most actions
  action = "{action_core $*}";

  # own action, both private/public
  ownaction = "{action_core $*}";

  # own action with target, both private/public
  ownaction_target = "{action_core $*}";

  # private action sent by others
  pvtaction = "{action_core $*}";
  pvtaction_query = "{action_core $*}";

  # public action sent by others
  pubaction = "{action_core $*} ";

  ##
  ## other IRC events
  ##

  # whois
  whois = "%# $[8]0 : $1-";

  # notices
  ownnotice = "[%r$0%K(%R$1-%K)]%n ";
  notice = "%K-%M$*%K-%n ";
  pubnotice_channel = "%K:%m$*";
  pvtnotice_host = "%K(%m$*%K)";
  servernotice = "%g!$*%n ";

  # CTCPs
  ownctcp = "[%r$0%K(%R$1-%K)] ";
  ctcp = "%g$*%n";

  # wallops
  wallop = "%W$*%n: ";
  wallop_nick = "%n$*";
  wallop_action = "%W * $*%n ";

  # netsplits
  netsplit = "%R$*%n";
  netjoin = "%C$*%n";

  # /names list
  names_prefix = "";
  names_nick = "[%_$0%_$1-] ";
  names_nick_op = "{names_nick $*}";
  names_nick_halfop = "{names_nick $*}";
  names_nick_voice = "{names_nick $*}";
  names_users = "[%g$*%n]";
  names_channel = "%G$*%n";

  # DCC
  dcc = "%g$*%n";
  dccfile = "%_$*%_";

  # DCC chat, own msg/action
  dccownmsg = "[%r$0%K($1-%K)%n] ";
  dccownnick = "%R$*%n";
  dccownquerynick = "%W$*%n";
  dccownaction = "{action $*}";
  dccownaction_target = "{action_core $0}%K:%c$1%n ";

  # DCC chat, others
  dccmsg = "[%G$1-%K(%g$0%K)%n] ";
  dccquerynick = "%G$*%n";
  dccaction = "%W (*dcc*) $*%n %|";

  ##
  ## statusbar
  ##

  # default background for all statusbars. You can also give
  # the default foreground color for statusbar items.
  sb_background = "%n%0";

  # default backround for "default" statusbar group
  #sb_default_bg = "%4";
  # background for prompt / input line
  #sb_prompt_bg = "%n";
  # background for info statusbar
  #sb_info_bg = "%n";
  # background for topicbar (same default)
  #sb_topic_bg = "%4";

  # text at the beginning of statusbars. sb-item already puts
  # space there,so we don't use anything by default.
  sbstart = "";
  # text at the end of statusbars. Use space so that it's never
  # used for anything.
  sbend = " ";

  topicsbstart = "{sbstart $*}";
  topicsbend = "{sbend $*}";

  prompt = "%c>>%n ";

  sb = "%W$*       ";
  sbmode = " %c:%n $*%n";
  sbaway = " (%GzZzZ%n)";
  sbservertag = ":$0 (change with ^X)";

  # activity in statusbar

  # ',' separator
  sb_act_sep = "%w$* ";
  # normal text
  sb_act_text = "%c$*";
  # public message
  sb_act_msg = "%W$*";
  # hilight
  sb_act_hilight = "%M$*";
  # hilight with specified color, $0 = color, $1 = text
  sb_act_hilight_color = "$0$1-%n";
};
formats = {
  "fe-common/core" = {
    pubmsg = "{pubmsgnick {pubnick %M$[-13]0}$2}$1";
    own_msg = "{ownmsgnick {ownnick $[-13]0$2}}$1";
    own_msg_channel = "{ownmsgnick {ownnick $[-13]0$3}{msgchannel $1}}$2";
    own_msg_private_query = "{ownprivmsgnick {ownprivnick $[-13]2}}$1";
    pubmsg_me = "{pubmsgmenick {menick $[-13]0}$2}$1";
    pubmsg_me_channel = "{pubmsgmenick {menick $[-13]0$3}{msgchannel $1}}$2";
    pubmsg_hilight = "{pubmsghinick $0 $0 $[-13]1$3%n}$2";
    pubmsg_hilight_channel = "{pubmsghinick $0 $[-13]1$4{msgchannel $2}}$3";
    pubmsg_channel = "{pubmsgnick {pubnick %M$[-13]0}$2}$1";
    msg_private_query = "{privmsgnick $[-13]0}$2";
  };
  "fe-common/irc" = {
    own_action = "{ownaction $[-11]0} $1";
    action_private = "{pvtaction $[-11]0}$1";
    action_private_query = "{pvtaction_query $[-11]0} $2";
    action_public = "{pubaction $[-11]0}$1";
  };
};
